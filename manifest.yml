apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
spec:
  replicas: 4
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
      - name: myapp-container
        image: myapp-image:latest
        resources:    # Указываем resources.requests и resources.limits
          requests:
            memory: "128Mi"
            cpu: "0.1"
          limits:
            memory: "128Mi"
            cpu: "1"
        startupProbe:             # Для проверки инициализации
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 3
      affinity:
        podAntiAffinity:           # Чтобы поды были в разных зонах 
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - myapp
            topologyKey: "topology.kubernetes.io/zone"
      strategy:    # Для отказоустойчовсти используем Rolling Update 
        rollingUpdate:
          maxSurge: 1   # Не более одного пода может быть недоступен во время обновления
          maxUnavailable: # Создается один дополнительный под во время обновления

---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler   #  Настроим HPA для автоматического масштабирования подов в зависимости от нагрузки
metadata:
  name: myapp-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: myapp
  minReplicas: 2  # Указываем минимальное и максимальное количество реплик
  maxReplicas: 10  
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
